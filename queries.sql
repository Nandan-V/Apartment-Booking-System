/* Task3: 
 * Alias names:
 * Buildings: "B"
 * Apartment: "A"
 * Booking: "BK"
 * Guest: "G"
 */

-- 1. Select apartments in Building 111
-- Retrieves a list of apartments available in building 111
SELECT A.ApartmentID, A.Type, A.ApartmentNumber, A.Rent, A.Availability
FROM svela833.Apartment A
WHERE A.BuildingID = 111
ORDER BY A.Type;

-- 2. Select available apartments not booked within a specific date range
-- Retrieves apartments that are available (not booked) during a specific date range
SELECT A.ApartmentID, A.Type, A.ApartmentNumber, A.Rent, A.Availability
FROM svela833.Apartment A
LEFT JOIN svela833.Booking BK ON A.ApartmentID = BK.ApartmentID AND (BK.CheckInDate <= '2024-01-10' AND BK.CheckOutDate >= '2024-01-01')
WHERE A.Availability = TRUE AND BK.ApartmentID IS NULL;

-- 3. Count the number of booked apartments for each building
-- Calculates how many apartments are booked in each building
SELECT B.BuildingID, B.Name, COUNT(A.ApartmentID) AS BookedApartments
FROM svela833.Buildings B
JOIN svela833.Apartment A ON B.BuildingID = A.BuildingID
JOIN svela833.Booking BK ON A.ApartmentID = BK.ApartmentID
GROUP BY B.BuildingID, B.Name
ORDER BY BookedApartments DESC;

-- 4. Calculate the total revenue generated by bookings for each building
-- Calculates total revenue from bookings based on the number of days each booking was made
SELECT 
    B.BuildingID, 
    B.Name, 
    SUM(DATEDIFF(BK.CheckOutDate, BK.CheckInDate) * 100) AS TotalRevenue
FROM svela833.Buildings B
JOIN svela833.Apartment A ON B.BuildingID = A.BuildingID
JOIN svela833.Booking BK ON A.ApartmentID = BK.ApartmentID
GROUP BY B.BuildingID, B.Name;

-- 5. Find guests who have made more than 2 bookings
-- Retrieves guests who have made more than two bookings
SELECT G.GuestID, G.FirstName, G.LastName
FROM svela833.Guest G
JOIN svela833.Booking BK ON G.GuestID = BK.GuestID
GROUP BY G.GuestID, G.FirstName, G.LastName
HAVING COUNT(BK.BookingID) > 2;

-- 6. Retrieve active bookings for today
-- Selects bookings whose check-in or check-out falls on the current date
SELECT BookingID, GuestID, ApartmentID, CheckInDate, CheckOutDate, Status
FROM svela833.Booking
WHERE CURDATE() BETWEEN CheckInDate AND CheckOutDate;

-- 7. Select booking details within a specific date range
-- Retrieves booking details for a specified date range
SELECT
    A.ApartmentNumber,
    A.Type AS ApartmentType,
    G.FirstName AS GuestFirstName,
    G.LastName AS GuestLastName,
    BK.Status AS BookingStatus,
    BK.CheckInDate,
    BK.CheckOutDate
FROM
    svela833.Booking BK
JOIN svela833.Apartment A ON BK.ApartmentID = A.ApartmentID
JOIN svela833.Guest G ON BK.GuestID = G.GuestID
WHERE
    BK.CheckInDate >= '2024-01-01' AND BK.CheckOutDate <= '2024-12-31'  -- Replace with your desired date range
ORDER BY
    BK.CheckInDate;
